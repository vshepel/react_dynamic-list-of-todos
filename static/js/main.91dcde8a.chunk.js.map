{"version":3,"sources":["types/Todo.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selected","onSelect","className","length","map","todo","cn","id","completed","title","type","onClick","TodoFilter","query","status","ALL","onStatus","onSearch","value","onChange","e","target","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","setSelected","setQuery","setStatus","result","filter","trim","toLowerCase","includes","filteredTodos","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91dcde8a.chunk.js","sourcesContent":["export interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nexport enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selected?: Todo,\n  onSelect?: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selected,\n  onSelect = () => {},\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {!!todos.length && todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': selected?.id === todo.id,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  (selected?.id === todo.id ? 'fa-eye-slash' : 'fa-eye'),\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Status } from '../../types/Todo';\n\ntype Props = {\n  query: string,\n  status: Status,\n  onStatus?: (type: Status) => void,\n  onSearch?: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    status = Status.ALL,\n    onStatus = () => {},\n    onSearch = () => {},\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(e) => onStatus(e.target.value as Status)}\n        >\n          <option value={Status.ALL}>All</option>\n          <option value={Status.ACTIVE}>Active</option>\n          <option value={Status.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => onSearch(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n        /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSearch('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selected: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selected,\n    onClose = () => {},\n  },\n) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selected.userId).then(setUser).finally(() => setLoading(false));\n  }, [selected]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selected.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {user && (\n                <>\n                  {' by '}\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Status, Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selected, setSelected] = useState<Todo>();\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState<Status>(Status.ALL);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos().then(setTodos).finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = () => {\n    let result = [...todos];\n\n    result = [...result].filter(todo => {\n      switch (status) {\n        case Status.ACTIVE:\n          return !todo.completed;\n        case Status.COMPLETED:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n\n    if (query.trim()) {\n      result = [...result]\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    return result;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                onStatus={setStatus}\n                onSearch={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : <TodoList todos={filteredTodos()} selected={selected} onSelect={setSelected} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selected && <TodoModal selected={selected} onClose={() => setSelected(undefined)} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}